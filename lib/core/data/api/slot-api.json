{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "My API"
    },
    "components": {
        "schemas": {},
        "parameters": {}
    },
    "paths": {
        "/slots": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "required": false,
                        "name": "date",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ]
                        },
                        "required": false,
                        "name": "isBooked",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "name": "bookedCustomerName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieves the slots",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "123"
                                                    },
                                                    "startDate": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "isBooked": {
                                                        "type": "string",
                                                        "enum": [
                                                            "true",
                                                            "false"
                                                        ]
                                                    },
                                                    "bookedCustomerName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "startDate"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "number",
                                                    "example": 400
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "An error happened"
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "location": {
                                                                "type": "string"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "location",
                                                            "message"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "code",
                                                "message"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slots/{id}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "example": "123"
                        },
                        "required": true,
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieves the slots",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "123"
                                                },
                                                "startDate": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "isBooked": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ]
                                                },
                                                "bookedCustomerName": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "startDate"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "number",
                                                    "example": 400
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "An error happened"
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "location": {
                                                                "type": "string"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "location",
                                                            "message"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "code",
                                                "message"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "number",
                                                    "example": 400
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "An error happened"
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "location": {
                                                                "type": "string"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "location",
                                                            "message"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "code",
                                                "message"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slots/{id}/book": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "example": "123"
                        },
                        "required": true,
                        "name": "id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "description": "Retrieves the slots",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Smith"
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Retrieves the slots",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "123"
                                                },
                                                "startDate": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "isBooked": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ]
                                                },
                                                "bookedCustomerName": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "startDate"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "number",
                                                    "example": 400
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "An error happened"
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "location": {
                                                                "type": "string"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "location",
                                                            "message"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "code",
                                                "message"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "number",
                                                    "example": 400
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "An error happened"
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "location": {
                                                                "type": "string"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "location",
                                                            "message"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "code",
                                                "message"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slots/{id}/cancel-booking": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "example": "123"
                        },
                        "required": true,
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieves the slots",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "123"
                                                },
                                                "startDate": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "isBooked": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ]
                                                },
                                                "bookedCustomerName": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "startDate"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "number",
                                                    "example": 400
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "An error happened"
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "location": {
                                                                "type": "string"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "location",
                                                            "message"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "code",
                                                "message"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "number",
                                                    "example": 400
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "An error happened"
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "location": {
                                                                "type": "string"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "location",
                                                            "message"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "code",
                                                "message"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}